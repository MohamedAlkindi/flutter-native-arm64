name: Flutter ARM64 Build

on:
  workflow_dispatch:

jobs:
  flutter_build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip git wget tar file python3

      # 3. Install OpenJDK 17
      - name: Install Java
        run: |
          sudo apt-get install -y openjdk-17-jdk
          java -version

      # 4. Install Android SDK
      - name: Install Android SDK
        run: |
          mkdir -p /opt/android-sdk/cmdline-tools
          cd /opt/android-sdk
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools.zip -d cmdline-tools/temp
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/temp/* cmdline-tools/latest/
          rm commandlinetools.zip
          echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
          echo "PATH=/opt/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      # 5. Accept Android licenses
      - name: Accept Android Licenses
        run: |
          yes | sdkmanager --licenses

      # 6. Install Android SDK Platforms and Tools
      - name: Install Platforms and Tools
        run: |
          sdkmanager "platform-tools" "platforms;android-36" "ndk;25.2.9519653" "cmake;3.22.1"

      # 7. Install Gradle
      - name: Install Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.3

      # 8. Install Flutter 3.35.2
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --branch 3.35.2 --depth 1 /opt/flutter
          echo "/opt/flutter/bin" >> $GITHUB_PATH
          flutter doctor -v

      # 9. Create a sample Flutter project
      - name: Create Sample Project
        run: |
          flutter create sample_project
          cd sample_project

      # 10. Get dependencies
      - name: Flutter Pub Get
        run: |
          cd sample_project
          flutter pub get

      # 11. Build APK
      - name: Build APK
        run: |
          cd sample_project
          flutter build apk

      # 12. Verify snapshots
      - name: Verify Snapshots
        run: |
          file /opt/flutter/bin/cache/artifacts/engine/linux-arm64/frontend_server_aot.dart.snapshot
          ls -lh /opt/flutter/bin/cache/artifacts/engine/linux-arm64/

      # 13. Upload snapshot and APK as artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter_build_outputs
          path: |
            /opt/flutter/bin/cache/artifacts/engine/linux-arm64/frontend_server_aot.dart.snapshot
            sample_project/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
