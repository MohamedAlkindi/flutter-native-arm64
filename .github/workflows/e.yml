name: Fetch Flutter ARM64 Snapshot

on:
  workflow_dispatch:

jobs:
  fetch-snapshot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable QEMU for ARM64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Fetch Flutter ARM64 snapshot inside container
        id: fetch-snapshot
        run: |
          set -e
          
          # Create a working directory for our script
          mkdir -p ./.tmp && cd ./.tmp

          # We use a Docker container to ensure a clean, controlled environment
          # and to leverage the QEMU emulation.
          docker run --rm --platform linux/arm64 \
            -v "$PWD:/workspace" \
            -w /workspace \
            arm64v8/ubuntu:22.04 bash -c "
              set -e
              
              # Install necessary dependencies
              apt-get update && apt-get install -y curl unzip git file ca-certificates

              # Download the Flutter SDK
              git clone https://github.com/flutter/flutter.git --branch 3.35.2 --depth 1 /usr/local/flutter
              export PATH=\"/usr/local/flutter/bin:\$PATH\"

              # This is the key step: it downloads the pre-built ARM64 artifacts.
              flutter precache --linux-arm64

              # Define the exact path to the snapshot file
              SNAPSHOT_PATH=/usr/local/flutter/bin/cache/artifacts/engine/linux-arm64/frontend_server.aot.dart.snapshot

              # Verify the file exists and is not empty.
              if [ ! -f \"\$SNAPSHOT_PATH\" ]; then
                echo \"❌ Snapshot file was not found after precaching.\"
                exit 1
              fi

              # Check file type and architecture
              echo \"🔍 Verifying snapshot file...\"
              file \"\$SNAPSHOT_PATH\"

              # Copy the snapshot to a location accessible by the host runner
              cp \"\$SNAPSHOT_PATH\" /workspace/frontend_server.aot.dart.snapshot
            "

          # Use a variable to make the path to the snapshot explicit for the next step.
          echo "snapshot_path=./.tmp/frontend_server.aot.dart.snapshot" >> "$GITHUB_OUTPUT"

      - name: Upload snapshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend_server_aot_snapshot
          path: ${{ steps.fetch-snapshot.outputs.snapshot_path }}
          retention-days: 7
