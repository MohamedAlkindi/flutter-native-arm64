name: Flutter ARM64 Full SDK (Android + Web hasbash)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 1Ô∏è‚É£ Install dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git unzip curl xz-utils zip python3 clang cmake ninja-build pkg-config \
            libgtk-3-dev liblzma-dev libssl-dev libcurl4-openssl-dev libfreetype6-dev \
            libfontconfig1-dev libc6-dev gcc g++ make file wget

      # 2Ô∏è‚É£ Clone Flutter stable
      - name: Clone Flutter stable
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1 flutter

      # 3Ô∏è‚É£ Detect Flutter version
      - name: Detect Flutter version
        run: |
          cd flutter
          FLUTTER_VER=$(./bin/flutter --version --machine | jq -r '.[0].frameworkVersion')
          echo "FLUTTER_VER=$FLUTTER_VER" >> $GITHUB_ENV
          cd ..

      # 4Ô∏è‚É£ Download matching ARM64 Dart SDK
      - name: Download Dart SDK ARM64
        run: |
          mkdir -p dart-sdk-arm64
          # Use Flutter version to determine Dart version (replace with correct mapping)
          DART_VER=$(curl -s "https://storage.googleapis.com/dart-archive/channels/stable/release/latest/VERSION" | jq -r '.revision')
          wget -O dart-sdk-arm64.zip "https://storage.googleapis.com/dart-archive/channels/stable/release/$DART_VER/linux-arm64/dart-sdk.zip"
          unzip dart-sdk-arm64.zip -d flutter/bin/cache/dart-sdk
          rm dart-sdk-arm64.zip

      # 5Ô∏è‚É£ Precache engines for Android + Web
      - name: Precache engines
        run: |
          cd flutter
          ./bin/flutter precache --android --web --no-linux --no-ios --no-windows --no-macos

      # 6Ô∏è‚É£ Verify Dart SDK is ARM64
      - name: Verify Dart ARM64 binaries
        run: |
          cd flutter/bin/cache/dart-sdk/bin
          for f in dart dartaotruntime dart_precompiled_runtime; do
            file "$f" | grep "aarch64" || (echo "$f is not ARM64!" && exit 1)
          done

      # 7Ô∏è‚É£ Trim SDK to Android + Web only
      - name: Trim SDK
        run: |
          cd flutter
          rm -rf examples/ dev/ docs/
          rm -rf bin/cache/pkg
          rm -rf bin/cache/artifacts/engine/linux-*
          rm -rf bin/cache/artifacts/engine/windows-*
          rm -rf bin/cache/artifacts/engine/darwin-*
          rm -rf bin/cache/artifacts/engine/ios

      # 8Ô∏è‚É£ Verify all files are ARM64
      - name: Verify all ARM64
        run: |
          cd flutter
          while IFS= read -r f; do
            [ -f "$f" ] && file "$f" | grep "aarch64" || echo "$f is OK"
          done < <(find . -type f)

      # 9Ô∏è‚É£ Package SDK
      - name: Package SDK
        run: |
          cd flutter
          zip -r9 ../flutter-arm64-full-sdk.zip .

      # üîü Generate SHA256 checksums
      - name: Generate SHA256 checksums
        run: |
          unzip -q ../flutter-arm64-full-sdk.zip -d flutter-sdk-unzip
          cd flutter-sdk-unzip
          find . -type f -exec sha256sum {} \; > ../flutter-sdk-checksums.txt

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-arm64-full-sdk
          path: |
            flutter-arm64-full-sdk.zip
            flutter-sdk-checksums.txt
