name: Build Flutter SDK (Linux ARM64 host, Android + Web only)

on:
  workflow_dispatch:

jobs:
  build-arm64-android-web:
    runs-on: ubuntu-latest

    steps:
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git curl unzip xz-utils zip \
            clang ninja-build pkg-config \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            python3 cmake openjdk-17-jdk

      - name: Clone Flutter (stable)
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "Flutter SDK cloned."

      - name: Get matching engine commit
        id: engine
        run: |
          ENGINE_HASH=$(cat flutter/bin/internal/engine.version)
          echo "engine_hash=$ENGINE_HASH" >> $GITHUB_OUTPUT

      - name: Clone engine sources
        run: |
          git clone https://github.com/flutter/engine.git engine
          cd engine
          git checkout ${{ steps.engine.outputs.engine_hash }}

      - name: Build host engine (ARM64, includes Web SDK)
        run: |
          cd engine
          ./flutter/tools/gn --unoptimized --target-os=linux --target-cpu=arm64 --full-dart-sdk
          ninja -C out/arm64_release

      - name: Build Android ARM64 engine
        run: |
          cd engine
          ./flutter/tools/gn --android --android-cpu=arm64 --unoptimized
          ninja -C out/android_release_arm64
      - name: Verify all binaries are ARM64
        run: |
          echo "Verifying ARM64 architecture..."
          # Find all ELF binaries in the engine output
          find flutter_arm64/bin/cache/artifacts/engine \
            -type f \
            -exec sh -c '
              for f; do
                if file "$f" | grep -q "ELF"; then
                  if ! file "$f" | grep -q "ARM aarch64"; then
                    echo "❌ Non-ARM64 binary found: $f"
                    file "$f"
                    exit 1
                  fi
                fi
              done
            ' sh {} +
          echo "✅ All ELF binaries are ARM64."
      - name: Package SDK (Android + Web only)
        run: |
          mkdir -p flutter_arm64/bin/cache/artifacts/engine
          # Host (includes web)
          cp -r engine/out/arm64_release flutter_arm64/bin/cache/artifacts/engine/linux-arm64
          # Android ARM64
          cp -r engine/out/android_release_arm64 flutter_arm64/bin/cache/artifacts/engine/android-arm64
          # Copy Flutter framework
          cp -r flutter/* flutter_arm64/
          tar -czf flutter_linux_arm64_android_web_sdk.tar.gz flutter_arm64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter_linux_arm64_android_web_sdk
          path: flutter_linux_arm64_android_web_sdk.tar.gz
