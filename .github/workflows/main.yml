name: Flutter ARM64 Full SDK (Android + Web)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04-arm64   # Native ARM64 runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            git curl unzip xz-utils cmake clang ninja-build pkg-config \
            libgtk-3-dev liblzma-dev libssl-dev libcurl4-openssl-dev \
            libfreetype6-dev libfontconfig1-dev libc6-dev gcc g++ make \
            file python3 wget jq zip && \
            sudo rm -rf /var/lib/apt/lists/*

      - name: Clone Flutter and Engine
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1 flutter
          git clone https://github.com/flutter/engine.git -b stable --depth 1 engine

      - name: Build Engine for ARM64 host + Android target
        run: |
          cd engine
          ./flutter/tools/gn --unoptimized --android --runtime-mode=release \
            --target-platform=android-arm64 --host-arch=arm64
          ninja -C out/host_release

      - name: Copy host tools and Android engine artifacts
        run: |
          cp engine/out/host_release/gen_snapshot flutter/bin/cache/artifacts/engine/host_debug_unopt/gen_snapshot
          cp engine/out/host_release/dart flutter/bin/cache/dart-sdk/bin/dart
          mkdir -p flutter/bin/cache/artifacts/engine/android-arm64-release
          cp -r engine/out/host_release/* flutter/bin/cache/artifacts/engine/android-arm64-release/

      - name: Precache Web artifacts
        run: |
          cd flutter
          ./bin/flutter precache --web --no-linux --no-windows --no-macos --force

      - name: Clean unnecessary files
        run: |
          rm -rf flutter/examples flutter/dev flutter/docs flutter/bin/cache/pkg

      - name: Package Flutter SDK
        run: |
          zip -r flutter-arm64-full-sdk.zip flutter
          sha256sum flutter-arm64-full-sdk.zip > flutter-arm64-full-sdk.zip.sha256

      - name: Verify all ELF binaries are ARM64
        run: |
          unzip flutter-arm64-full-sdk.zip -d flutter-sdk-unzip
          if find flutter-sdk-unzip -type f -exec file {} + | grep ELF | grep -v aarch64; then
            echo "Error: Found non-ARM64 binary!"
            exit 1
          else
            echo "âœ… All ELF binaries are ARM64."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-arm64-full-sdk
          path: |
            flutter-arm64-full-sdk.zip
            flutter-arm64-full-sdk.zip.sha256
